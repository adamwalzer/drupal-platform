<?php
	$cmwn_feed_menu_items = array();

	require_once(drupal_get_path('module','cmwn_feed').'/includes/friend.inc');  
	require_once(drupal_get_path('module','cmwn_feed').'/includes/flip.inc');  	
  
  


function cmwn_feed_admin(){
  
  $feed_queries = array_merge(cmwn_feed_friend_queries_list(),cmwn_feed_flip_queries_list());
  
  $form = array();

  $options = array();

  $result = db_query("SELECT query_name, weight FROM {cmwn_feed_weight} cfw");
  $weights = array();
  while ($row = db_fetch_object($result)) {
    $weights[$row->query_name] = (float)$row->weight;
  }      
  
  foreach($feed_queries as $type){
    $form['cmwn_feed_weight_' . str_replace(' ', '_', $type)] = array(
      '#type' => 'textfield',
      '#title' => $type . ' ' . t('weight'),
      '#default_value' => $weights[$type]?$weights[$type]:1,
      '#size' => 3,
      '#maxlength' => 5,
      '#description' => t("Specify the weight of feed items by type here. This will affect how items appear in user friend feeds."),
      '#required' => TRUE,
    );      
  }
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('submit'),
  );
  
  $form['#submit'][] = 'cmwn_feed_settings_submit';
  $form['#validate'][] = 'cmwn_feed_settings_validate';

  return ($form);  
}

function cmwn_feed_settings_validate($form, &$form_state){

  $feed_queries = array_merge(cmwn_feed_friend_queries_list(),cmwn_feed_flip_queries_list());
  
  foreach($feed_queries as $type){
    if(!is_numeric($form_state['values']['cmwn_feed_weight_' . str_replace(' ', '_', $type)]) && $form_state['values']['cmwn_feed_weight_' . str_replace(' ', '_', $type)] != '0'){
      form_set_error('cmwn_feed_weight_' . str_replace(' ', '_', $type),t('This must be a non-zero integer or decimal number.'));
    }
  }
  
}

function cmwn_feed_settings_submit($form, &$form_state){
  $feed_queries = array_merge(cmwn_feed_friend_queries_list(),cmwn_feed_flip_queries_list());
  
  //dsm($form_state);
  $result = db_query("SELECT query_name, weight FROM {cmwn_feed_weight} cfw");
  $weights = array();
  while ($row = db_fetch_object($result)) {
    $weights[$row->query_name] = (float)$row->weight;
  }    
  
  foreach($feed_queries as $type){
    $weight = false;
    @$weight = $weights[$type];
  
    if($weight){
      $object = array();
      $object['query_name'] = $type;
      $object['weight']  = $form_state['values']['cmwn_feed_weight_' . str_replace(' ', '_', $type)];
      $res = drupal_write_record('cmwn_feed_weight', $object, array('query_name'));
    }else{
      $object = array();
      $object['query_name'] = $type;
      $object['weight']  = $form_state['values']['cmwn_feed_weight_' . str_replace(' ', '_', $type)];        
      $res = drupal_write_record('cmwn_feed_weight', $object);  
    }
  }
}


function cmwn_feed_init() {
  
}

function cmwn_feed_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_profile_form':
      
      break;
  }
}

function cmwn_feed_menu() {
  global $cmwn_feed_menu_items;
  
  $cmwn_feed_menu_items['admin/settings/cmwn_feed'] = array(
    'title' => 'Administer Feed Settings',
    'description' => 'Description of your On this date settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cmwn_feed_admin'),
    'access arguments' => array('administer cmwn_feed settings'),
    'type' => MENU_NORMAL_ITEM,
   );  
   
  return $cmwn_feed_menu_items;
}

function cmwn_feed_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'presave':
      break;
    case 'insert':
      if($node->type == 'flip'){
        $sponsor = node_load($node->field_brand_partner[0]['nid']);
        v2_profiles_feed_insert(1, 89, 98, 'Feed ' . time(),'', $sponsor->title . ' has released a new action item.', $sponsor->nid);//uid, tid, tid
      }
    case 'update':
      break;
    case 'view':
      break;
  }
}