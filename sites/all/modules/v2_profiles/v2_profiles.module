<?php

	global $v2_profiles_menu_items;
	global $v2_profiles_theme_items;

	$v2_profiles_menu_items = array();
	$v2_profiles_theme_items = array();

	include_once(drupal_get_path('module','webform').'/includes/webform.submissions.inc');

	require_once(drupal_get_path('module','v2_profiles').'/includes/account.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/arcade.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/avatars.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/children.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/class.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/feed.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/flips.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/resource_center.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/friends.inc');
  require_once(drupal_get_path('module','v2_profiles').'/includes/import_students.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/index.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/interests.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/links.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/name.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/news.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/notices.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/partners.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/register.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/school.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/videos.inc');
	require_once(drupal_get_path('module','v2_profiles').'/includes/whiteboard.inc');

  if (module_exists('jquery_ui')) {
    jquery_ui_add(array('ui.tabs'));
    jquery_ui_add(array('ui.dialog'));
    //jquery_ui_add(array('ui.tooltip'));
    jquery_ui_add(array('ui.accordion'));

    drupal_add_css(drupal_get_path('module', 'jquery_ui') . '/jquery.ui/themes/default/ui.all.css');
  }

	function v2_profiles_access($uid) {

		global $user;

		if ($user->uid == 0) drupal_goto('user/login');

		$u = user_load($uid);

		if ($user && $u && $user->uid === $u->uid) return true;

		return false;

	}

  function v2_profiles_school_dashboard_access($school_id) {

    global $user;

   //TODO: Fill this in with fuller school access check
    if (in_array('School Administrator', array_values($user->roles)) || in_array('administrator', array_values($user->roles))) {
      return true;
    }else{
      return false;
    }



  }



	function v2_profiles_authenticated_access() {

		global $user;

		if ($user->uid > 0) return true;

		return false;

	}

	function v2_profiles_menu() {

		global $v2_profiles_menu_items;
		
    $v2_profiles_menu_items['user/%user/edit/base'] = array(
      'title callback' => 'check_plain',
      'title arguments' => array('Edit Extended Profile'),
      'page callback' => 'v2_profiles_profile_edit',
      'page arguments' => array(1, 3),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 10,
      'load arguments' => array('%map', '%index'),
      'tab_parent' => 'user/%/edit',
      //'file' => 'user.pages.inc',
    );		

		return $v2_profiles_menu_items;

	}

  function v2_profiles_profile_edit($user, $profile_type){
    module_load_include('inc', 'user', 'user.pages'); 
    module_load_include('inc', 'node', 'node.pages'); 
    switch($user->user_type){
     case 'child':
         return '<h1 class="h1o">Edit Base Profile</h1>' . 
         drupal_get_form("base_profile_node_form", node_load($user->getBaseProfile()->nid)) . 
         '<h1 class="h1o">Edit Child Profile</h1>' . 
         drupal_get_form("child_profile_node_form", node_load($user->getChildProfile()->nid));
        break;
      case 'parent':
          $parent_profile_form = null;
          $parent_profile_nid = $user->getParentProfile()->nid;
          if($parent_profile_nid){
            $parent_profile_form = '<h1 class="h1o">Edit Parent Profile</h1>' .  drupal_get_form("parent_profile_node_form", node_load($user->getParentProfile()->nid));
          }
         return '<h1 class="h1o">Edit Base Profile</h1>' . 
         drupal_get_form("base_profile_node_form", node_load($user->getBaseProfile()->nid)) . 
         $parent_profile_form;
         

        break;        
      case 'teacher':
          $teacher_profile_form = null;
          $teacher_profile_nid = $user->getTeacherProfile()->nid;
          if($teacher_profile_nid){
            $teacher_profile_form = '<h1 class="h1o">Edit Teacher Profile</h1>' .  drupal_get_form("teacher_profile_node_form", node_load($user->getTeacherProfile()->nid));
          }
         return '<h1 class="h1o">Edit Base Profile</h1>' . 
         drupal_get_form("base_profile_node_form", node_load($user->getBaseProfile()->nid)) . 
         $teacher_profile_form;
        break;
      default:
        //some error, this should only be used for these user types
        break;
    }
    return 'test';
  }

	function v2_profiles_menu_alter(&$items) {

		$items['user/%'] = array(
			'access arguments' => array(1),
			'access callback' => 'v2_profiles_access',
			'description' => '',
			'page arguments' => array(1),
			'page callback' => 'v2_profiles_index',
			'title' => 'User',
			'type' => MENU_CALLBACK,
		);

	}

	function v2_profiles_theme() {

		global $v2_profiles_theme_items;

		return $v2_profiles_theme_items;

	}



	function render_description($item) { ?>

	<div class="block modal flips description" id="flip-<?php print $item->id; ?>" style="display:none;">
		<div class="content">
			<div class="section cms">
				<?php if ($item->large_src1 != '/' && $item->large_src2 != '/') { ?>
					<div class="image">
						<span class="n1"><img src="<?php print $item->large_src1; ?>" alt="<?php print $item->title; ?>" /></span>
						<span class="n2" style="height:<?php print $item->progress; ?>%;"><img src="<?php print $item->large_src2; ?>" alt="<?php print $item->title; ?>" /></span>
					</div>
				<?php } ?>
				<div class="title <?php print $item->color; ?>">
					<strong><?php print $item->title; ?></strong>
				</div>
				<div class="description">
					<?php print $item->description; ?>
				</div>
			</div>
		</div>
	</div>

	<?php }

/*	function v2_profiles_nodeapi(&$node,$action) {

		switch ($action) {

			case 'insert' :

				if ($node->type == 'project_submission') {

					// if user = child and status = 0
				}

				break;

			case 'update' :

//$args = func_get_args();
//print_r($args);
//exit();

				break;

		}

	}*/

/*	function v2_profiles_og($action,$gid,$uid,$arguments) {

		switch ($action) {

			case 'user insert' :

				break;

		}

//$args = func_get_args();
//print_r($args);
//exit();

	}*/

	///

	function v2_profiles_form_alter(&$form, &$form_state, $form_id) {

		if (strpos($form_id, 'webform_client_form_') === 0 && $form['#id'] != 'node-form' && $form['#node']->type === 'action') {

			if (is_array($form['submitted'])) {
				foreach ($form['submitted'] as $key => $value) {
					if (is_array($form['submitted'][$key])) {

						$form['submitted'][$key]['#theme_wrappers'] = array();
						$form['submitted'][$key]['#pre_render'] = array();
						$form['submitted'][$key]['#post_render'] = array();

					}
				}
			}
      $form['src_nid'] = array('#type' => 'hidden', '#default_value' => is_numeric(arg(3))?arg(3):'');
			$form['actions']['submit']['#value'] = 'Save & Continue';
			$form['#validate'] = array('v2_profiles_flips_validate');
			$form['#submit'][] = 'v2_profiles_flips_submit';

		}

    if($form_id == 'comment_form'){
      $form['submit']['#value'] = t('Post');

      $form['comment_filter']['comment']['#attributes']['placeholder'] = 'Comment...';
      //print_r($form);
    }


    if($form_id == 'user_profile_form'){
      global $user;
      //change this text for all users per comp from Joni
      $form['account']['status']['#options'][0] = 'Suspended';
      if(in_array('School Administrator', array_values($user->roles)) && $user->uid != '1'){
        $edit_user = user_load($form['#uid']);
        
//        dsm($edit_user);
        
        //school administrators cannot edit certain form fields for users.
        drupal_set_message(t('Please note - certain user fields may not be edited by School Administrators; these have been removed from this form for your convenience.'));
        unset($form['account']['roles']);
        unset($form['cmwn_oauth_user_context']);
        unset($form['masquerade']);
        unset($form['messaging']);
        unset($form['content_images']);

      }
    }

    if((in_array($form_id,array('base_profile_node_form','child_profile_node_form','teacher_profile_node_form','parent_profile_node_form'))) && arg(3) == 'base' ){
      unset($form['options']);
      dsm($form);
      global $user;
      if(in_array('School Administrator',$user->roles)){
        $school_nid = db_result(db_query('select nid from {content_field_school_administrator} cfsa where field_school_administrator_uid = %d', $user->uid));
        //$form['#redirect'] = array('user/' . arg(1) . '/edit','destination=school/' . $school_nid . '/dashboard');        
        $form['#redirect'] = 'school/' . $school_nid . '/dashboard';        
      }

    }
	}

	///

	function v2_profiles_flips_submit(&$form, &$form_state) {

		drupal_set_message('Action item updated & saved!');

    //insert feed
    //print_r($form_state);exit;
    $uid = $form_state['values']['details']['uid'];
    $action_nid = $form_state['values']['details']['nid'];
    $flip_nid = $form_state['values']['src_nid'];
    $account = user_load($uid);
    $n = node_load($flip_nid);
/*
    //determine if this is the first step in the flip
    if($n->field_actions[0]['nid'] == $action_nid){//first action item, insert feed that they just started!
      if($n){
        //v2_profiles_feed_insert($uid,88,97,'Feed ' . time(),'', '<a href="/user/' . $account->uid . '">' . $account->name . '</a> has signed up for the flip "<em>' . $n->title . '</em>"!');
      }else{
        //v2_profiles_feed_insert($uid,88,97,'Feed ' . time(),'', '<a href="/user/' . $account->uid . '">' . $account->name . '</a> has signed up for a new flip!');
      }
    }elseif($n->field_actions[count($n->field_actions)-1]['nid'] == $action_nid){//finished flip
        //v2_profiles_feed_insert($uid,88,98,'Feed ' . time(),'', '<a href="/user/' . $account->uid . '">' . $account->name . '</a> has completed the flip "<em>' . $n->title . '</em>"!');
    }else{//subsequent action item
      if($n){
        //v2_profiles_feed_insert($uid,88,96,'Feed ' . time(),'', '<a href="/user/' . $account->uid . '">' . $account->name . '</a> has completed an action item for "<em>' . $n->title . '</em>"!');
      }else{
        //v2_profiles_feed_insert($uid,88,96,'Feed ' . time(),'', '<a href="/user/' . $account->uid . '">' . $account->name . '</a> has completed an action item!');
      }

    }
*/
    //redirect
		drupal_goto($_SESSION['v2_profiles_redirect']);

	}

	function v2_profiles_flips_validate(&$form, &$form_state) {

		webform_client_form_validate($form,$form_state);

		if (form_get_errors() && $_SESSION['v2_profiles_redirect']) {
			drupal_goto($_SESSION['v2_profiles_redirect']);
		}

	}

	function v2_profiles_form_user_admin_settings_alter(&$form, &$form_state) {

		$form['email']['no_approval_required']['user_mail_register_no_approval_required_notify'] = array(
			'#type' => 'checkbox',
			'#title' => t('Notify user when account is created.'),
			'#default_value' => variable_get('user_mail_register_no_approval_required_notify', true),
			'#weight' => 999
		);

	}

function v2_profiles_views_query_alter(&$view, &$query) {
  switch($view->name){
    case 'school_manage_students':

      //$query->add_field(NULL,'teacher here','Teacher');
      //dsm($query->fields);
      //unset($query->fields['node_node_data_field_teacher_classes_title']);
      break;
    
    case 'newsfeed':
      /*dsm($query);
      $query->where[] = array(
        'clauses' = array(
          0 => node.type in 
        )  
      );*/
      break;
    
    default:
      break;
  }
}

function v2_profiles_get_teachers_by_student_uid($uid){
  $teachers = array();
  $result = db_query("SELECT tu.name, tu.uid
            FROM content_field_teacher_classes cftc
            JOIN content_field_student_classes cfsc ON cftc.field_teacher_classes_nid = cfsc.field_student_classes_nid
            JOIN node sn ON sn.nid = cfsc.nid
            AND sn.uid = %d
            JOIN node tn ON tn.nid = cftc.nid
            AND tn.vid = cftc.vid
            JOIN users tu ON tu.uid = tn.uid
            LIMIT 0 , 30", $uid);
  while($teacher = db_fetch_object($result)){
    $teachers[] = array(
      'uid' => $teacher->uid,
      'name' => $teacher->name
    );
  }
  
  return $teachers;
}

function v2_profiles_get_children_by_parent_uid($uid){
  $children = db_query('select u.uid, u.name from {user_relationships} ur join {users} u on u.uid = ur.requestee_id where requester_id = %d and approved = 1 and rtid = 2', array($uid));
      $children_links = array();
      while($child = db_fetch_object($children)){
        $children_links[] = l($child->name, 'user/'.$child->uid);
      }
  
  return $children_links;
}